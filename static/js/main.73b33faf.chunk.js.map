{"version":3,"sources":["algorithms/bubbleSort.js","components/SortingVisualizer.js","reducers/array/reducer.js","reducers/algorithm/reducer.js","reducers/sorted/reducer.js","reducers/running/reducer.js","reducers/bubbleSort/reducer.js","reducers/swappers/reducer.js","reducers/mergeSort/reducer.js","reducers/quickSort/reducer.js","reducers/heapSort/reducer.js","reducers/selectionSort/reducer.js","reducers/speed/reducer.js","reducers/theme/reducer.js","reducers/rootReducer.js","store.js","algorithms/mergeSort.js","algorithms/quickSort.js","algorithms/heapSort.js","algorithms/selectionSort.js","components/Topbar.js","components/BottomBar.js","App.js","serviceWorker.js","index.js"],"names":["currentValue","connect","array","algorithm","currentBubbleTwo","currentMergeX","currentQuickTwo","pivot","currentHeapThree","currentSelectionTwo","spivot","currentSorted","currentSwappers","isRunning","speed","dispatch","numWidth","Math","floor","window","innerWidth","length","width","numMargin","margin","color","fontSize","id","style","height","backgroundColor","textAlign","display","justifyContent","alignItems","map","number","index","includes","className","key","paddingBottom","transition","marginLeft","setArray","createAction","handleActions","SET_ARRAY","state","payload","setAlgorithm","SET_ALGORITHM","setCurrentSorted","SET_CURRENT_SORTED","concat","setRunning","SET_RUNNING","setCurrentBubbleTwo","SET_CURRENT_BUBBLETWO","setCurrentSwappers","SET_CURRENT_SWAPPERS","setCurrentMergeX","SET_CURRENT_MERGEX","setCurrentQuickTwo","setPivot","SET_CURRENT_QUICKTWO","SET_PIVOT","setCurrentHeapThree","SET_CURRENT_HEAPTHREE","setCurrentSelectionTwo","SET_CURRENT_SELECTION_TWO","setSpeed","SET_SPEED","theme","SET_THEME","combineReducers","store","createStore","rootReducer","subscribe","previousValue","getState","console","log","handleDispatch","animations","num","setTimeout","dispatchFunction","shift","bubbleSort","stateArray","slice","sorted","round","i","push","temp","mergeSort","finalArray","mergeSortHelper","start","end","obj","half","first","second","indexHalf","actualFirst","actualSecond","isFinalMerge","sortedArray","indexToPush","forEach","subArr","actualSort","idx","currentanimations","quickSort","quickSortHelper","left","right","Array","siftDown","toDispatch","swap","heapSort","currentIndex","buildMaxHeap","selectionSort","minimum","minIndex","j","generateArray","random","updateAlgorithm","sort","doSort","useState","sortText","setSortText","handleClick","cursor","onClick","onMouseOver","onMouseOut","updateSpeed","speedValue","useEffect","document","getElementById","value","class","type","onChange","evt","parseInt","target","disabled","min","max","e","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.73b33faf.chunk.js","sourcesContent":["import { setArray } from \"../reducers/array/reducer\";\r\nimport { setCurrentBubbleTwo } from \"../reducers/bubbleSort/reducer\";\r\nimport { setCurrentSwappers } from \"../reducers/swappers/reducer\";\r\nimport { setCurrentSorted } from \"../reducers/sorted/reducer\";\r\nimport { setRunning } from \"../reducers/running/reducer\";\r\nimport { store } from '../store';\r\n\r\nfunction select(state) {\r\n    return state.speed\r\n}\r\n\r\nlet currentValue\r\nfunction handleChange() {\r\n    let previousValue = currentValue\r\n    currentValue = select(store.getState())\r\n\r\n    if (previousValue !== currentValue) {\r\n        console.log(\r\n            'Some deep nested property changed from',\r\n            previousValue,\r\n            'to',\r\n            currentValue\r\n        )\r\n    }\r\n}\r\n\r\nconst unsubscribe = store.subscribe(handleChange)\r\n\r\nconst bubbleSort = (stateArray, dispatch, speed) => {\r\n    let array = stateArray.slice(0), animations = [], sorted = false, round = 0;\r\n    while (!sorted) {\r\n        sorted = true;\r\n        for (let i = 0; i < array.length - 1 - round; i++) {\r\n            animations.push([i, i + 1]);\r\n            if (array[i] > array[i + 1]) {\r\n                animations.push([i, i + 1, true]);\r\n                let temp = array[i];\r\n                array[i] = array[i + 1];\r\n                array[i + 1] = temp;\r\n                sorted = false;\r\n                animations.push(array.slice(0));\r\n                animations.push([]);\r\n            }\r\n        }\r\n        animations.push([true, array.length - 1 - round]);\r\n        round++;\r\n    }\r\n    handleDispatch(animations, dispatch, array, speed);\r\n    return array;\r\n}\r\n\r\nconst handleDispatch = (animations, dispatch, array, speed) => {\r\n    if (!animations.length) {\r\n        dispatch(setCurrentBubbleTwo(array.map((num, index) => index)));\r\n        setTimeout(() => {\r\n            dispatch(setCurrentBubbleTwo([]));\r\n            dispatch(setCurrentSorted(array.map((num, index) => index)));\r\n            dispatch(setRunning(false));\r\n        }, 900);\r\n        return;\r\n    }\r\n    let dispatchFunction = animations[0].length > 3 ?\r\n        setArray : animations[0].length === 3 || animations[0].length === 0 ?\r\n            setCurrentSwappers : animations[0].length === 2 && typeof animations[0][0] === \"boolean\" ?\r\n                setCurrentSorted : setCurrentBubbleTwo;\r\n    dispatch(dispatchFunction(animations.shift()));\r\n    setTimeout(() => {\r\n        handleDispatch(animations, dispatch, array, currentValue);\r\n    }, speed);\r\n}\r\n\r\nexport default bubbleSort;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nexport const SortingVisualizer = ({ array, algorithm, currentBubbleTwo, currentMergeX, currentQuickTwo, pivot, currentHeapThree, currentSelectionTwo, spivot, currentSorted, currentSwappers, isRunning, speed }) => {\r\n\r\n    const numWidth = Math.floor(window.innerWidth / (array.length * 1.5));\r\n    const width = `${numWidth}px`;\r\n    const numMargin = array.length < 5 ? 10 : array.length < 8 ? 8 : array.length < 11 ? 6 : array.length < 20 ? 4 : array.length < 50 ? 3.5 : array.length < 100 ? 3 : array.length < 130 ? 2.5 : 2;\r\n    const margin = `${numMargin}px`;\r\n    const color = numWidth > 20 ? \"white\" : \"transparent\";\r\n    const numFont = numWidth > 70 ? 20 : numWidth > 60 ? 18 : numWidth > 50 ? 16 : numWidth > 40 ? 14 : numWidth > 30 ? 12 : numWidth > 20 ? 10 : 8;\r\n    const fontSize = `${numFont}px`\r\n\r\n    return (\r\n        <div id=\"bodyContainer\" style={{ width: \"100%\", height: \"80vh\", backgroundColor: \"transparent\", textAlign: \"center\", display: \"flex\", justifyContent: \"center\", alignItems: \"flex-end\" }}>\r\n            { array.length ? array.map((number, index) => {\r\n                const backgroundColor = currentSwappers.includes(index) ?\r\n                    \"rgba(255, 7, 58, 0.8)\" : currentBubbleTwo.includes(index) || currentMergeX.includes(index) || currentQuickTwo.includes(index) || currentHeapThree.includes(index) || currentSelectionTwo.includes(index) ?\r\n                        \"rgba(0, 123, 255, 0.8)\" : pivot === index || spivot.includes(index) ?\r\n                            \"rgba(237, 234, 59, 0.8)\" : currentSorted.includes(index) ?\r\n                                \"rgba(40, 167, 69, 0.8)\" : \"rgba(108, 117, 125, 0.8)\";\r\n                return <div\r\n                    className=\"arrayElement\"\r\n                    key={index}\r\n                    style={{ display: \"flex\", paddingBottom: \"10px\", transition: `${speed < 200 ? 0 : 0.1}s`, alignItems: \"flex-end\", justifyContent: \"center\", height: `${number / 2.3}%`, width: width, marginLeft: margin, backgroundColor: backgroundColor, color: color, fontSize: fontSize }}>\r\n                    {number}\r\n                </div>\r\n            }) : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ array, algorithm, currentBubbleTwo, currentMergeX, currentQuickTwo, pivot, currentHeapThree, currentSelectionTwo, spivot, currentSorted, currentSwappers, isRunning, speed }) => ({\r\n    array, algorithm, currentBubbleTwo, currentMergeX, currentQuickTwo, pivot, currentHeapThree, currentSelectionTwo, spivot, currentSorted, currentSwappers, isRunning, speed\r\n})\r\n\r\nconst mapDispatchToProps = () => dispatch => {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SortingVisualizer)\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport const SET_ARRAY = \"SET_ARRAY\";\r\nexport const setArray = createAction(SET_ARRAY);\r\n\r\nexport const array = handleActions({\r\n    SET_ARRAY: (state, { payload }) => {\r\n        return payload;\r\n    },\r\n}, initialState);\r\n","import { createAction, handleActions } from 'redux-actions'\r\n\r\nconst initState = \"\";\r\n\r\nexport const SET_ALGORITHM = \"SET_ALGORITHM\";\r\nexport const setAlgorithm = createAction(SET_ALGORITHM);\r\n\r\nexport const algorithm = handleActions({\r\n    SET_ALGORITHM: (state, { payload }) => {\r\n        return payload;\r\n    },\r\n}, initState);","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initState = [];\r\n\r\nexport const SET_CURRENT_SORTED = \"SET_CURRENT_SORTED\";\r\nexport const setCurrentSorted = createAction(SET_CURRENT_SORTED);\r\n\r\nexport const currentSorted = handleActions({\r\n    SET_CURRENT_SORTED: (state, { payload }) => {\r\n        if (payload.length) {\r\n            return state.concat(payload);\r\n        } else {\r\n            return [];\r\n        }\r\n    },\r\n}, initState);","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initState = false;\r\n\r\nexport const SET_RUNNING = \"SET_RUNNING\";\r\nexport const setRunning = createAction(SET_RUNNING);\r\n\r\nexport const isRunning = handleActions({\r\n    SET_RUNNING: (state, { payload }) => {\r\n        return payload;\r\n    },\r\n}, initState);","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initState = [];\r\n\r\nexport const SET_CURRENT_BUBBLETWO = \"SET_CURRENT_BUBBLETWO\";\r\nexport const setCurrentBubbleTwo = createAction(SET_CURRENT_BUBBLETWO);\r\n\r\nexport const currentBubbleTwo = handleActions({\r\n    SET_CURRENT_BUBBLETWO: (state, { payload }) => {\r\n        return payload;\r\n    },\r\n}, initState);","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initState = [];\r\n\r\nexport const SET_CURRENT_SWAPPERS = \"SET_CURRENT_SWAPPERS\";\r\nexport const setCurrentSwappers = createAction(SET_CURRENT_SWAPPERS);\r\n\r\nexport const currentSwappers = handleActions({\r\n    SET_CURRENT_SWAPPERS: (state, { payload }) => {\r\n        if (payload.length) {\r\n            return state.concat(payload);\r\n        } else {\r\n            return [];\r\n        }\r\n    },\r\n}, initState);","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport const SET_CURRENT_MERGEX = \"SET_CURRENT_MERGEX\";\r\nexport const setCurrentMergeX = createAction(SET_CURRENT_MERGEX);\r\n\r\nexport const currentMergeX = handleActions({\r\n    SET_CURRENT_MERGEX: (state, { payload }) => {\r\n        return payload;\r\n    },\r\n}, initialState);","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialStateOne = [];\r\nconst initialStateTwo = null;\r\n\r\nexport const SET_CURRENT_QUICKTWO = \"SET_CURRENT_QUICKTWO\";\r\nexport const setCurrentQuickTwo = createAction(SET_CURRENT_QUICKTWO);\r\nexport const SET_PIVOT = \"SET_PIVOT\";\r\nexport const setPivot = createAction(SET_PIVOT);\r\n\r\nexport const currentQuickTwo = handleActions({\r\n    SET_CURRENT_QUICKTWO: (state, { payload }) => {\r\n        return payload;\r\n    },\r\n}, initialStateOne);\r\nexport const pivot = handleActions({\r\n    SET_PIVOT: (state, { payload }) => {\r\n        return payload;\r\n    },\r\n}, initialStateTwo);","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport const SET_CURRENT_HEAPTHREE = \"SET_CURRENT_HEAPTHREE\";\r\nexport const setCurrentHeapThree = createAction(SET_CURRENT_HEAPTHREE);\r\n\r\nexport const currentHeapThree = handleActions({\r\n    SET_CURRENT_HEAPTHREE: (state, { payload }) => {\r\n        return payload;\r\n    },\r\n}, initialState);","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialStateOne = [];\r\nconst initialStateTwo = [];\r\n\r\nexport const SET_CURRENT_SELECTION_TWO = \"SET_CURRENT_SELECTION_TWO\";\r\nexport const setCurrentSelectionTwo = createAction(SET_CURRENT_SELECTION_TWO);\r\nexport const SET_PIVOT = \"SET_PIVOT\";\r\nexport const setPivot = createAction(SET_PIVOT);\r\n\r\nexport const currentSelectionTwo = handleActions({\r\n    SET_CURRENT_SELECTION_TWO: (state, { payload }) => {\r\n        return payload;\r\n    },\r\n}, initialStateOne);\r\nexport const spivot = handleActions({\r\n    SET_PIVOT: (state, { payload }) => {\r\n        return payload;\r\n    },\r\n}, initialStateTwo);","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initState = 100;\r\n\r\nexport const SET_SPEED = \"SET_SPEED\";\r\nexport const setSpeed = createAction(SET_SPEED);\r\n\r\nexport const speed = handleActions({\r\n    SET_SPEED: (state, { payload }) => {\r\n        return payload;\r\n    },\r\n}, initState);","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initState = false;\r\n\r\nexport const SET_THEME = \"SET_THEME\";\r\nexport const setTheme = createAction(SET_THEME);\r\n\r\nexport const theme = handleActions({\r\n    SET_THEME: (state, { payload }) => {\r\n        return payload;\r\n    },\r\n}, initState);","import { combineReducers } from 'redux'\r\nimport { array } from \"./array/reducer\"\r\nimport { algorithm } from \"./algorithm/reducer\"\r\nimport { currentBubbleTwo } from \"./bubbleSort/reducer\"\r\nimport { currentMergeX } from \"./mergeSort/reducer\"\r\nimport { currentQuickTwo, pivot } from \"./quickSort/reducer\"\r\nimport { currentHeapThree } from \"./heapSort/reducer\"\r\nimport { currentSelectionTwo, spivot } from \"./selectionSort/reducer\"\r\nimport { currentSwappers } from \"./swappers/reducer\"\r\nimport { currentSorted } from \"./sorted/reducer\"\r\nimport { isRunning } from \"./running/reducer\"\r\nimport { speed } from \"./speed/reducer\"\r\nimport { theme } from \"./theme/reducer\"\r\n\r\nexport default combineReducers({\r\n    array, algorithm, currentBubbleTwo, currentMergeX, currentQuickTwo, pivot, currentHeapThree, currentSelectionTwo, spivot, currentSorted, currentSwappers, isRunning, speed, theme\r\n})","\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nexport const store = createStore(rootReducer);\r\n","import { setArray } from \"../reducers/array/reducer\";\r\nimport { setCurrentMergeX } from \"../reducers/mergeSort/reducer\";\r\nimport { setCurrentSwappers } from \"../reducers/swappers/reducer\";\r\nimport { setCurrentSorted } from \"../reducers/sorted/reducer\";\r\nimport { setRunning } from \"../reducers/running/reducer\";\r\nimport { store } from '../store';\r\n\r\nfunction select(state) {\r\n    return state.speed\r\n}\r\n\r\nlet currentValue\r\nfunction handleChange() {\r\n    let previousValue = currentValue\r\n    currentValue = select(store.getState())\r\n\r\n    if (previousValue !== currentValue) {\r\n        console.log(\r\n            'Some deep nested property changed from',\r\n            previousValue,\r\n            'to',\r\n            currentValue\r\n        )\r\n    }\r\n}\r\n\r\nconst unsubscribe = store.subscribe(handleChange)\r\n\r\nfunction mergeSort(stateArray, dispatch, speed) {\r\n    let array = stateArray.slice(0),\r\n        animations = [];\r\n    let finalArray = mergeSortHelper(array.map((num, idx) => [num, idx]), animations, 0, array.length - 1, { array: array.slice(0) });\r\n    handleDispatch(animations, dispatch, finalArray, speed);\r\n}\r\n\r\nfunction mergeSortHelper(array, animations, start, end, obj) {\r\n    if (array.length === 1) {\r\n        return array;\r\n    }\r\n    let half = Math.floor(array.length / 2),\r\n        first = array.slice(0, half),\r\n        second = array.slice(half),\r\n        indexHalf = Math.floor((end + 1 + start) / 2),\r\n        actualFirst = mergeSortHelper(first, animations, start, indexHalf - 1, obj),\r\n        actualSecond = mergeSortHelper(second, animations, indexHalf, end, obj),\r\n        isFinalMerge = false;\r\n    if (actualFirst.length + actualSecond.length === obj.array.length) isFinalMerge = true;\r\n    return actualSort(actualFirst, actualSecond, animations, obj, start, end, isFinalMerge);\r\n}\r\n\r\nfunction actualSort(first, second, animations, obj, start, end, isFinalMerge) {\r\n    let sortedArray = [];\r\n    let indexToPush = start;\r\n    while (first.length && second.length) {\r\n        animations.push([first[0][1], second[0][1]]);\r\n        if (first[0][0] <= second[0][0]) {\r\n            indexToPush++;\r\n            sortedArray.push(first.shift());\r\n        } else {\r\n            animations.push([first[0][1], second[0][1], true]);\r\n            second[0][1] = indexToPush++;\r\n            sortedArray.push(second.shift());\r\n            first.forEach(subArr => subArr[1]++);\r\n            if (start === 0) {\r\n                obj.array = sortedArray.map(subArr => subArr[0]).concat(first.map(subArr => subArr[0])).concat(second.map(subArr => subArr[0])).concat(obj.array.slice(end + 1));\r\n            } else {\r\n                obj.array = obj.array.slice(0, start).concat(sortedArray.map(subArr => subArr[0])).concat(first.map(subArr => subArr[0])).concat(second.map(subArr => subArr[0])).concat(obj.array.slice(end + 1));\r\n            }\r\n            animations.push(obj.array.concat([indexToPush - 1, indexToPush]));\r\n            animations.push([]);\r\n        }\r\n        if (isFinalMerge) animations.push([true, indexToPush - 1]);\r\n    }\r\n    return sortedArray.concat(first).concat(second);\r\n}\r\n\r\nfunction handleDispatch(animations, dispatch, array, speed) {\r\n    if (!animations.length) {\r\n        dispatch(setCurrentMergeX(array.map((num, index) => index)));\r\n        setTimeout(() => {\r\n            dispatch(setCurrentMergeX([]));\r\n            dispatch(setCurrentSorted(array.map((num, index) => index)));\r\n            dispatch(setRunning(false));\r\n        }, 900);\r\n        return;\r\n    }\r\n    let dispatchFunction = animations[0].length > 3 ?\r\n        setArray : animations[0].length === 3 && typeof animations[0][2] === \"boolean\" || animations[0].length === 0 ?\r\n            setCurrentSwappers : animations[0].length === 2 && typeof animations[0][0] === \"boolean\" ?\r\n                setCurrentSorted : setCurrentMergeX;\r\n    if (dispatchFunction === setArray) {\r\n        let currentanimations = animations.shift();\r\n        dispatch(dispatchFunction(currentanimations.slice(0, currentanimations.length - 2)));\r\n        dispatch(setCurrentSwappers([]));\r\n        dispatch(setCurrentMergeX([]));\r\n        dispatch(setCurrentSwappers([currentanimations[currentanimations.length - 2], currentanimations[currentanimations.length - 1]]));\r\n        dispatch(setCurrentMergeX([currentanimations[currentanimations.length - 2], currentanimations[currentanimations.length - 1]]));\r\n    } else {\r\n        dispatch(dispatchFunction(animations.shift()));\r\n    }\r\n    setTimeout(() => {\r\n        handleDispatch(animations, dispatch, array, currentValue);\r\n    }, speed);\r\n}\r\n\r\nexport default mergeSort;","import { setArray } from \"../reducers/array/reducer\";\r\nimport { setCurrentQuickTwo, setPivot } from \"../reducers/quickSort/reducer\";\r\nimport { setCurrentSwappers } from \"../reducers/swappers/reducer\";\r\nimport { setCurrentSorted } from \"../reducers/sorted/reducer\";\r\nimport { setRunning } from \"../reducers/running/reducer\";\r\nimport { store } from '../store';\r\n\r\nfunction select(state) {\r\n    return state.speed\r\n}\r\n\r\nlet currentValue\r\nfunction handleChange() {\r\n    let previousValue = currentValue\r\n    currentValue = select(store.getState())\r\n\r\n    if (previousValue !== currentValue) {\r\n        console.log(\r\n            'Some deep nested property changed from',\r\n            previousValue,\r\n            'to',\r\n            currentValue\r\n        )\r\n    }\r\n}\r\n\r\nconst unsubscribe = store.subscribe(handleChange)\r\n\r\nfunction quickSort(stateArray, dispatch, speed) {\r\n    let array = stateArray.slice(0),\r\n        animations = [];\r\n    quickSortHelper(array, 0, array.length - 1, animations);\r\n    handleDispatch(animations, dispatch, array, speed);\r\n    return array;\r\n}\r\n\r\nfunction quickSortHelper(array, start, end, animations) {\r\n    if (start >= end) {\r\n        animations.push([true, start]);\r\n        return;\r\n    }\r\n    let pivot = start,\r\n        left = start + 1,\r\n        right = end;\r\n    animations.push(pivot);\r\n    animations.push([left, right]);\r\n    while (right >= left) {\r\n        if (array[right] < array[pivot] && array[left] > array[pivot]) {\r\n            animations.push([left, right, true]);\r\n            let temp = array[right];\r\n            array[right] = array[left];\r\n            array[left] = temp;\r\n            animations.push(array.slice(0));\r\n            animations.push([]);\r\n        }\r\n        if (array[right] >= array[pivot]) {\r\n            right--;\r\n        }\r\n        if (array[left] <= array[pivot]) {\r\n            left++;\r\n        }\r\n        if (right >= left) animations.push([left, right]);\r\n    }\r\n    animations.push([pivot, right]);\r\n    if (pivot !== right) {\r\n        let temp = array[right];\r\n        array[right] = array[pivot];\r\n        array[pivot] = temp;\r\n        animations.push([pivot, right, true]);\r\n        animations.push(array.slice(0));\r\n        animations.push([]);\r\n        animations.push([true, right]);\r\n    }\r\n    quickSortHelper(array, start, right - 1, animations);\r\n    quickSortHelper(array, right + 1, end, animations);\r\n}\r\n\r\nfunction handleDispatch(animations, dispatch, array, speed) {\r\n    if (!animations.length) {\r\n        dispatch(setPivot(null));\r\n        dispatch(setCurrentQuickTwo(array.map((num, index) => index)));\r\n        setTimeout(() => {\r\n            dispatch(setCurrentQuickTwo([]));\r\n            dispatch(setRunning(false));\r\n        }, 900);\r\n        return;\r\n    }\r\n    let dispatchFunction = !(animations[0] instanceof Array) ?\r\n        setPivot : animations[0].length > 3 ?\r\n            setArray : animations[0].length !== 2 ?\r\n                setCurrentSwappers : animations[0].length === 2 && typeof animations[0][0] === \"boolean\" ?\r\n                    setCurrentSorted : setCurrentQuickTwo;\r\n    dispatch(dispatchFunction(animations.shift()));\r\n    if (dispatchFunction === setPivot) dispatch(setCurrentQuickTwo(animations.shift()));\r\n    setTimeout(() => {\r\n        handleDispatch(animations, dispatch, array, currentValue);\r\n    }, speed);\r\n}\r\n\r\nexport default quickSort;","import { setArray } from \"../reducers/array/reducer\";\r\nimport { setCurrentHeapThree } from \"../reducers/heapSort/reducer\";\r\nimport { setCurrentSwappers } from \"../reducers/swappers/reducer\";\r\nimport { setCurrentSorted } from \"../reducers/sorted/reducer\";\r\nimport { setRunning } from \"../reducers/running/reducer\";\r\nimport { store } from '../store';\r\n\r\nfunction select(state) {\r\n    return state.speed\r\n}\r\n\r\nlet currentValue\r\nfunction handleChange() {\r\n    let previousValue = currentValue\r\n    currentValue = select(store.getState())\r\n\r\n    if (previousValue !== currentValue) {\r\n        console.log(\r\n            'Some deep nested property changed from',\r\n            previousValue,\r\n            'to',\r\n            currentValue\r\n        )\r\n    }\r\n}\r\n\r\nconst unsubscribe = store.subscribe(handleChange)\r\n\r\nfunction heapSort(stateArray, dispatch, speed) {\r\n    let array = stateArray.slice(0),\r\n        toDispatch = [];\r\n    buildMaxHeap(array, toDispatch);\r\n    let end = array.length - 1;\r\n    while (end > 0) {\r\n        toDispatch.push([0, end]);\r\n        let temp = array[end];\r\n        array[end] = array[0];\r\n        array[0] = temp;\r\n        toDispatch.push([0, end, true]);\r\n        toDispatch.push(array.slice(0));\r\n        toDispatch.push([]);\r\n        toDispatch.push([true, end]);\r\n        siftDown(array, 0, end, toDispatch);\r\n        end--;\r\n    }\r\n    toDispatch.push([true, end]);\r\n    handleDispatch(toDispatch, dispatch, array, speed);\r\n    return array;\r\n}\r\n\r\nfunction buildMaxHeap(array, toDispatch) {\r\n    let currentIndex = Math.floor(array.length / 2);\r\n    while (currentIndex >= 0) {\r\n        siftDown(array, currentIndex, array.length, toDispatch);\r\n        currentIndex--;\r\n    }\r\n}\r\n\r\nfunction siftDown(array, start, end, toDispatch) {\r\n    if (start >= Math.floor(end / 2)) {\r\n        return;\r\n    }\r\n    let left = start * 2 + 1,\r\n        right = start * 2 + 2 < end ? start * 2 + 2 : null,\r\n        swap;\r\n    if (right) {\r\n        toDispatch.push([start, left, right]);\r\n        swap = array[left] > array[right] ? left : right;\r\n    } else {\r\n        toDispatch.push([start, left]);\r\n        swap = left;\r\n    }\r\n    if (array[start] < array[swap]) {\r\n        let temp = array[swap];\r\n        array[swap] = array[start];\r\n        array[start] = temp;\r\n        toDispatch.push([start, swap, true]);\r\n        toDispatch.push(array.slice(0));\r\n        toDispatch.push([]);\r\n        siftDown(array, swap, end, toDispatch);\r\n    }\r\n}\r\n\r\nfunction handleDispatch(toDispatch, dispatch, array, speed) {\r\n    if (!toDispatch.length) {\r\n        dispatch(setCurrentHeapThree(array.map((num, index) => index)));\r\n        setTimeout(() => {\r\n            dispatch(setCurrentHeapThree([]));\r\n            dispatch(setRunning(false));\r\n        }, 900);\r\n        return;\r\n    }\r\n    let dispatchFunction = toDispatch[0].length > 3 ?\r\n        setArray : toDispatch[0].length === 3 && typeof toDispatch[0][2] === \"boolean\" || !toDispatch[0].length ?\r\n            setCurrentSwappers : toDispatch[0].length === 2 && typeof toDispatch[0][0] === \"boolean\" ?\r\n                setCurrentSorted : setCurrentHeapThree;\r\n    dispatch(dispatchFunction(toDispatch.shift()));\r\n    setTimeout(() => {\r\n        handleDispatch(toDispatch, dispatch, array, currentValue);\r\n    }, speed);\r\n}\r\n\r\nexport default heapSort;","import { setArray } from \"../reducers/array/reducer\";\r\nimport { setCurrentSelectionTwo, setPivot } from \"../reducers/selectionSort/reducer\";\r\nimport { setCurrentSwappers } from \"../reducers/swappers/reducer\";\r\nimport { setCurrentSorted } from \"../reducers/sorted/reducer\";\r\nimport { setRunning } from \"../reducers/running/reducer\";\r\nimport { store } from '../store';\r\n\r\nfunction select(state) {\r\n    return state.speed\r\n}\r\n\r\nlet currentValue\r\nfunction handleChange() {\r\n    let previousValue = currentValue\r\n    currentValue = select(store.getState())\r\n\r\n    if (previousValue !== currentValue) {\r\n        console.log(\r\n            'Some deep nested property changed from',\r\n            previousValue,\r\n            'to',\r\n            currentValue\r\n        )\r\n    }\r\n}\r\n\r\nconst unsubscribe = store.subscribe(handleChange)\r\n\r\nconst selectionSort = (stateArray, dispatch, speed) => {\r\n    let array = stateArray.slice(0), animations = [];\r\n    for (let i = 0; i < array.length - 1; i++) {\r\n        animations.push([i, true]);\r\n        let minimum = array[i];\r\n        let minIndex = i;\r\n        for (let j = i + 1; j < array.length; j++) {\r\n            animations.push([i, j]);\r\n            if (array[j] < minimum) {\r\n                minimum = array[j];\r\n                minIndex = j;\r\n                animations.push([j, true]);\r\n            }\r\n        }\r\n\r\n        animations.push([i, minIndex, true]);\r\n        let temp = array[i];\r\n        array[i] = array[minIndex];\r\n        array[minIndex] = temp;\r\n        animations.push(array.slice(0));\r\n        animations.push([]);\r\n\r\n        animations.push([true, i]);\r\n    }\r\n    handleDispatch(animations, dispatch, array, speed);\r\n    return array;\r\n}\r\n\r\nconst handleDispatch = (animations, dispatch, array, speed) => {\r\n    if (!animations.length) {\r\n        dispatch(setCurrentSelectionTwo(array.map((num, index) => index)));\r\n        dispatch(setPivot([]));\r\n        setTimeout(() => {\r\n            dispatch(setCurrentSelectionTwo([]));\r\n            dispatch(setCurrentSorted(array.map((num, index) => index)));\r\n            dispatch(setRunning(false));\r\n        }, 900);\r\n        return;\r\n    }\r\n    let dispatchFunction = animations[0].length > 3 ?\r\n        setArray : animations[0].length === 3 || animations[0].length === 0 ?\r\n            setCurrentSwappers : animations[0].length === 2 && typeof animations[0][0] === \"boolean\" ?\r\n                setCurrentSorted : animations[0].length === 2 && typeof animations[0][1] === \"boolean\" ?\r\n                    setPivot : setCurrentSelectionTwo;\r\n    dispatch(dispatchFunction(animations.shift()));\r\n    setTimeout(() => {\r\n        handleDispatch(animations, dispatch, array, currentValue);\r\n    }, speed);\r\n}\r\n\r\nexport default selectionSort;","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setArray } from '../reducers/array/reducer'\r\nimport { setAlgorithm } from '../reducers/algorithm/reducer'\r\nimport { setCurrentSorted } from '../reducers/sorted/reducer'\r\nimport { setRunning } from '../reducers/running/reducer'\r\nimport bubbleSort from '../algorithms/bubbleSort'\r\nimport mergeSort from '../algorithms/mergeSort'\r\nimport quickSort from '../algorithms/quickSort'\r\nimport heapSort from '../algorithms/heapSort'\r\nimport selectionSort from '../algorithms/selectionSort'\r\nimport './Topbar.css'\r\n\r\nexport const Topbar = ({ array, algorithm, sort, isRunning, generateArray, updateAlgorithm, speed }) => {\r\n\r\n    const [sortText, setSortText] = useState(\"trSo ti utO!\");\r\n\r\n    function handleClick(algorithm) {\r\n        updateAlgorithm(algorithm);\r\n    }\r\n\r\n    function handleChange(evt) {\r\n        generateArray(Math.floor((parseInt(evt.target.value) + 3) * 1.65));\r\n    }\r\n\r\n    const color = isRunning ? \"rgba(214, 29, 29, 0.8)\" : \"white\";\r\n\r\n    const cursor = isRunning ? \"auto\" : \"pointer\";\r\n\r\n    return (\r\n        <div id=\"toolbar\">\r\n            <div className=\"left-menu\">\r\n                <div\r\n                    className={algorithm === \"mergeSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\"}\r\n                    onClick={() => handleClick(\"mergeSort\")}>\r\n                    Merge Sort\r\n                </div>\r\n                <div\r\n                    className={algorithm === \"quickSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\"}\r\n                    onClick={() => handleClick(\"quickSort\")}>\r\n                    Quick Sort\r\n                </div>\r\n                <div\r\n                    className={algorithm === \"heapSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\"}\r\n                    onClick={() => handleClick(\"heapSort\")}>\r\n                    Heap Sort\r\n                </div>\r\n            </div>\r\n            <div className=\"sort-button\" style={{ color: \"black\", cursor: cursor, transition: \"1s\" }} onMouseOver={() => { setSortText(\"Sort it Out!\") }} onMouseOut={() => setSortText(\"trSo ti utO!\")} onClick={algorithm ? !isRunning ? () => sort(algorithm, array, speed) : null : null}>{sortText}</div>\r\n            <div className=\"right-menu\">\r\n                <div\r\n                    className={algorithm === \"bubbleSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\"}\r\n                    onClick={() => handleClick(\"bubbleSort\")}>\r\n                    Bubble Sort\r\n                </div>\r\n                <div\r\n                    className={algorithm === \"selectionSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\"}\r\n                    onClick={() => handleClick(\"selectionSort\")}>\r\n                    Selection Sort\r\n                </div>\r\n                <div\r\n                    className={algorithm === \"insertionSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\"}\r\n                    onClick={() => handleClick(\"insertionSort\")}>\r\n                    Insertion Sort\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ array, algorithm, isRunning, speed }) => ({\r\n    array, algorithm, isRunning, speed\r\n})\r\n\r\nconst mapDispatchToProps = () => dispatch => ({\r\n    generateArray: (length) => {\r\n        let array = [];\r\n        while (array.length < length) {\r\n            array.push(Math.floor(Math.random() * 200) + 10);\r\n        }\r\n        dispatch(setArray(array));\r\n        dispatch(setCurrentSorted([]));\r\n    },\r\n\r\n    updateAlgorithm: (algorithm) => {\r\n        dispatch(setAlgorithm(algorithm));\r\n    },\r\n\r\n    sort: (algorithm, array, speed) => {\r\n        let doSort = algorithm === \"bubbleSort\" ?\r\n            bubbleSort : algorithm === \"mergeSort\" ?\r\n                mergeSort : algorithm === \"quickSort\" ?\r\n                    quickSort : algorithm === \"heapSort\" ?\r\n                        heapSort : algorithm === \"selectionSort\" ?\r\n                            selectionSort : null;\r\n        dispatch(setCurrentSorted([]));\r\n        dispatch(setRunning(true));\r\n        doSort(array, dispatch, speed);\r\n    },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Topbar)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setArray } from '../reducers/array/reducer'\r\nimport { setCurrentSorted } from '../reducers/sorted/reducer'\r\nimport { setSpeed } from '../reducers/speed/reducer'\r\nimport './BottomBar.css'\r\n\r\nexport const BottomBar = ({ array, isRunning, generateArray, updateSpeed }) => {\r\n\r\n    useEffect(() => {\r\n        generateArray(18);\r\n        document.getElementById(\"sizeRange\").value = 8;\r\n        updateSpeed(500);\r\n        document.getElementById(\"speedRange\").value = 501;\r\n    }, [])\r\n\r\n    function handleSizeChange(evt) {\r\n        generateArray(Math.floor((parseInt(evt.target.value) + 3) * 1.65));\r\n    }\r\n\r\n    const handleSpeedChange = (e) => {\r\n        updateSpeed(1001 - parseInt(e.target.value))\r\n    }\r\n\r\n    return (\r\n        <div className=\"bottomBar\">\r\n            <div\r\n                id={!isRunning ? \"generateArray\" : \"generateArrayX\"}\r\n                onClick={!isRunning ? () => generateArray(array.length) : null}>\r\n                Randomize\r\n            </div>\r\n            <div class=\"slidecontainer\">\r\n                Change Array Size\r\n                <input type=\"range\" onChange={handleSizeChange} disabled={isRunning ? \"disabled\" : null} min=\"1\" max=\"100\" class=\"slider\" id=\"sizeRange\" />\r\n            </div>\r\n            <div class=\"slidecontainer\">\r\n                Change Speed\r\n                <input type=\"range\" onChange={handleSpeedChange} min=\"1\" max=\"1000\" class=\"slider\" id=\"speedRange\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ array, isRunning }) => ({\r\n    array, isRunning\r\n})\r\n\r\nconst mapDispatchToProps = () => dispatch => ({\r\n    generateArray: (length) => {\r\n        let array = [];\r\n        while (array.length < length) {\r\n            array.push(Math.floor(Math.random() * 200) + 10);\r\n        }\r\n        dispatch(setArray(array));\r\n        dispatch(setCurrentSorted([]));\r\n    },\r\n\r\n    updateSpeed: (speedValue) => {\r\n        dispatch(setSpeed(speedValue))\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BottomBar)\r\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport './App.css';\nimport SortingVisualizer from './components/SortingVisualizer';\nimport Topbar from './components/Topbar';\nimport BottomBar from './components/BottomBar'\n\nfunction App({ theme }) {\n\n\treturn (\n\t\t<div className={theme ? \"dark\" : \"light\"}>\n\t\t\t<Topbar />\n\t\t\t<SortingVisualizer />\n\t\t\t<BottomBar />\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = ({ theme }) => ({\n\ttheme\n})\n\nconst mapDispatchToProps = () => dispatch => ({\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}